<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<!-- MySql指定驱动的路径 -->
    <classPathEntry
            location="D:\project\maven_ssm\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar"/>
    
    <!-- context元素用于指定生成一组对象的环境，一个数据库一个context-->
    <context id="my" targetRuntime="MyBatis3">
    	<!-- 注释 -->
        <commentGenerator>
            <property name="suppressDate" value="false"/>   <!-- 是否取消注释 -->
            <property name="suppressAllComments" value="true"/>  <!-- 是否生成注释代时间戳-->
        </commentGenerator>

		<!-- jdbc连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/test"
                        userId="root" password="123456"/>

		<!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="com.yztc.po"
                            targetProject="maven_ssm_pk_test">
          	<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

		<!-- 生成mapper文件 -->
        <sqlMapGenerator targetPackage="com.yztc.mapper"
                         targetProject="maven_ssm_pk_test">
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

		<!-- 生成dao文件 -->
        <javaClientGenerator targetPackage="com.yztc.mapper"
                             targetProject="maven_ssm_pk_test" type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

       <!-- 配置表信息 -->
       <!-- schema即为数据库名 
       		tableName为对应的数据库表 
       		domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->
        <table tableName="User2" domainObjectName="User2"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>
    </context>
</generatorConfiguration>
